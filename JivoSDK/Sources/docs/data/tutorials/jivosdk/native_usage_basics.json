{"metadata":{"title":"Basic usage","categoryPathComponent":"table","category":"Basic usage","role":"project"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"project","hierarchy":{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table","modules":[{"projects":[{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics","sections":[{"kind":"task","reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-handle-user-session"},{"kind":"task","reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-display-SDK"},{"kind":"task","reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-customize-UI-elements"},{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-handle-Push-Notifications","kind":"task"}]}],"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/Native-app"},{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/React-Native-app","projects":[{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics","sections":[{"kind":"task","reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics#How-to-handle-user-session"},{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics#How-to-display-SDK","kind":"task"},{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics#How-to-handle-Push-Notifications","kind":"task"}]}]},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics#How-to-handle-user-session"},{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics#How-to-display-SDK","kind":"task"},{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics#How-to-handle-Push-Notifications","kind":"task"}],"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics"}],"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/Flutter-app"}],"paths":[["doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table","doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/$volume","doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/Native-app"],["doc:\/\/org.cocoapods.JivoSDK\/documentation\/JivoSDK"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/jivosdk\/native_usage_basics"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/tutorials\/jivosdk\/native_usage_basics"]}],"identifier":{"url":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics","interfaceLanguage":"swift"},"sections":[{"chapter":"Native app","title":"Basic usage","kind":"hero","content":[{"inlineContent":[{"type":"text","text":"Some scenarios of how to use SDK"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"How to handle user session","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"How to display SDK","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"How to customize UI elements"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"How to handle Push Notifications"}]}]}]}]},{"kind":"tasks","tasks":[{"stepsSection":[{"code":"native.user_manager_00.swift.sample","runtimePreview":null,"caption":[],"type":"step","content":[{"inlineContent":[{"type":"text","text":"Let’s assume you have a UserManager class"},{"type":"text","text":" "},{"type":"text","text":"that helps you to manage your active user"}],"type":"paragraph"}],"media":null},{"content":[{"inlineContent":[{"type":"text","text":"As mandatory, you have to start Jivo session for user"}],"type":"paragraph"}],"media":null,"code":"native.user_manager_01.swift.sample","runtimePreview":null,"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You may also pass "},{"type":"codeVoice","code":"null"},{"type":"text","text":" as userToken to start incognito session"}]},{"name":"Important","style":"important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Please take a look at "},{"type":"reference","identifier":"doc:\/\/org.cocoapods.JivoSDK\/documentation\/JivoSDK\/common_user_token","isActive":true},{"text":" page to learn more about what is userToken","type":"text"}]}]}],"type":"step"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Optionally, you may specify some contact info","type":"text"}]}],"runtimePreview":null,"code":"native.user_manager_02.swift.sample","caption":[{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"It will help you contact him easier in future"}],"type":"paragraph"}],"name":"Note"}],"media":null,"type":"step"}],"title":"How to handle user session","contentSection":[{"mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Keep track of user activity, and perform following actions:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"start session","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"update user info","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"stop session"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"contentAndMedia"}],"anchor":"How-to-handle-user-session"},{"title":"How to display SDK","contentSection":[{"mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Next thing is to display the JivoSDK UI onscreen"}]}],"kind":"contentAndMedia"}],"stepsSection":[{"caption":[],"type":"step","media":null,"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s assume you have a HelpViewController class"},{"text":" ","type":"text"},{"type":"text","text":"which is responsible for Help Center of your app"}]}],"code":"native.profile_view_controller_00.swift.sample"},{"type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"First step is to define the additional case"},{"type":"text","text":" "},{"type":"text","text":"for opening the support screen"}]}],"caption":[],"code":"native.profile_view_controller_01.swift.sample","runtimePreview":null},{"media":null,"caption":[],"type":"step","runtimePreview":null,"code":"native.profile_view_controller_02.swift.sample","content":[{"inlineContent":[{"text":"Then, import JivoSDK module and push JivoSDK into navigation stack","type":"text"}],"type":"paragraph"}]},{"type":"step","content":[{"inlineContent":[{"text":"As an alternative, you may want to present JivoSDK modally over the screen","type":"text"}],"type":"paragraph"}],"media":null,"code":"native.profile_view_controller_03.swift.sample","runtimePreview":null,"caption":[]}],"anchor":"How-to-display-SDK"},{"contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You are able to change some captions, colors, and icons"}]}],"mediaPosition":"trailing"}],"title":"How to customize UI elements","anchor":"How-to-customize-UI-elements","stepsSection":[{"type":"step","caption":[],"code":"native.sdk_display_customization_00.swift.sample","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Please take a look at ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.cocoapods.JivoSDK\/documentation\/JivoSDK\/JVDisplayElement","isActive":true},{"text":" and call corresponding “define(…)” methods for those you need","type":"text"}]}],"media":null}]},{"anchor":"How-to-handle-Push-Notifications","contentSection":[{"content":[{"inlineContent":[{"type":"text","text":"Let’s assume you have an AppDelegate class"},{"text":" ","type":"text"},{"type":"text","text":"that manages your app lifecycle"}],"type":"paragraph"}],"kind":"contentAndMedia","mediaPosition":"trailing"}],"stepsSection":[{"code":"native.app_delegate_00.swift.sample","caption":[],"media":null,"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"In most projects, this class just implements the entry point","type":"text"}]}],"type":"step"},{"code":"native.app_delegate_01.swift.sample","runtimePreview":null,"media":null,"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To support Push Notifications,"},{"type":"text","text":" "},{"type":"text","text":"JivoSDK should take care of related system methods"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Also, JivoSDK can support User Notifications"},{"text":" ","type":"text"},{"text":"to take care of notifications displaying in foreground","type":"text"}],"type":"paragraph"}],"code":"native.app_delegate_02.swift.sample","media":null,"runtimePreview":null,"caption":[],"type":"step"},{"media":null,"type":"step","code":"native.app_delegate_10.swift.sample","caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"As an alternative, you can just make your AppDelegate to inherit from JVAppDelegate"},{"text":" ","type":"text"},{"text":"that already implements all of these methods","type":"text"}]}],"runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Also, with ability to customize notifications handling"}]}],"caption":[],"media":null,"runtimePreview":null,"code":"native.app_delegate_11.swift.sample","type":"step"}],"title":"How to handle Push Notifications"}]},{"kind":"callToAction","abstract":[{"type":"text","text":"Some scenarios of how to use SDK"}],"action":{"type":"reference","overridingTitle":"Get started","overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics","isActive":true},"title":"Basic usage","featuredEyebrow":"Tutorial"}],"references":{"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/native_usage_basics#How-to-customize-UI-elements":{"type":"section","abstract":[{"type":"text","text":"Some scenarios of how to use SDK"}],"role":"pseudoSymbol","title":"How to customize UI elements","kind":"section","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-customize-UI-elements","url":"\/tutorials\/jivosdk\/native_usage_basics#How-to-customize-UI-elements"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/native_usage_basics#How-to-handle-user-session":{"type":"section","abstract":[{"type":"text","text":"Some scenarios of how to use SDK"}],"role":"pseudoSymbol","title":"How to handle user session","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-handle-user-session","kind":"section","url":"\/tutorials\/jivosdk\/native_usage_basics#How-to-handle-user-session"},"native.profile_view_controller_02.swift.sample":{"highlights":[{"line":3},{"line":28},{"line":29},{"line":30}],"syntax":"swift","fileName":"ProfileViewController.swift","identifier":"native.profile_view_controller_02.swift.sample","content":["import Foundation","import UIKit","import JivoSDK","","fileprivate enum ProfileMenuItem: Int {","    case support","    case faq","    case website","}","","final class ProfileViewController: UITableViewController, UITableViewDelegate {","    \/\/ ...","    ","    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {","        switch ProfileMenuItem(rawValue: indexPath.row) {","        case .support:","            handleProfileMenuItemSupportTap()","        case .faq:","            handleProfileMenuItemFaqTap()","        case .website:","            handleProfileMenuItemWebsiteTap()","        case nil:","            break","        }","    }","    ","    private func handleProfileMenuItemSupportTap() {","        if let navigationController {","            Jivo.display.push(into: navigationController)","        }","    }","    ","    private func handleProfileMenuItemFaqTap() {","        \/\/ navigate to faq screen","    }","    ","    private func handleProfileMenuItemWebsiteTap() {","        \/\/ open website in safari","    }","}"],"fileType":"swift","type":"file"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/flutter_usage_basics":{"url":"\/tutorials\/jivosdk\/flutter_usage_basics","abstract":[{"text":"Some scenarios of how to use SDK","type":"text"}],"kind":"project","title":"Basic usage","type":"topic","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics","role":"project"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/flutter_usage_basics#How-to-display-SDK":{"type":"section","abstract":[{"type":"text","text":"Some scenarios of how to use SDK"}],"role":"pseudoSymbol","title":"How to display SDK","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics#How-to-display-SDK","kind":"section","url":"\/tutorials\/jivosdk\/flutter_usage_basics#How-to-display-SDK"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/react_usage_basics#How-to-handle-user-session":{"type":"section","abstract":[{"type":"text","text":"Some scenarios of how to use SDK"}],"role":"pseudoSymbol","title":"How to handle user session","kind":"section","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics#How-to-handle-user-session","url":"\/tutorials\/jivosdk\/react_usage_basics#How-to-handle-user-session"},"doc://org.cocoapods.JivoSDK/documentation/JivoSDK/common_user_token":{"type":"topic","abstract":[{"type":"text","text":"Required for keeping chat history alive"}],"role":"article","title":"User Token and JWT","identifier":"doc:\/\/org.cocoapods.JivoSDK\/documentation\/JivoSDK\/common_user_token","kind":"article","url":"\/documentation\/jivosdk\/common_user_token"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/react_usage_basics":{"type":"topic","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics","role":"project","title":"Basic usage","abstract":[{"text":"Some scenarios of how to use SDK","type":"text"}],"kind":"project","url":"\/tutorials\/jivosdk\/react_usage_basics"},"doc://org.cocoapods.JivoSDK/tutorials/table/Flutter-app":{"type":"topic","abstract":[],"role":"article","title":"Flutter app","kind":"article","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/Flutter-app","url":"\/tutorials\/table\/flutter-app"},"native.app_delegate_02.swift.sample":{"fileName":"AppDelegate.swift","syntax":"swift","content":["import Foundation","import UIKit","import UserNotifications","import JivoSDK","","final class AppDelegate: UIResponder",", UIApplicationDelegate",", UNUserNotificationCenterDelegate {","    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {","        Jivo.notifications.handleLaunch(options: launchOptions)","        UNUserNotificationCenter.current().delegate = self","        return true","    }","    ","    func application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {","        Jivo.notifications.setPushToken(data: deviceToken)","    }","    ","    func application(_ application: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: Error) {","        Jivo.notifications.setPushToken(data: nil)","    }","    ","    func application(_ application: UIApplication, didReceiveRemoteNotification userInfo: [AnyHashable : Any], fetchCompletionHandler completionHandler: @escaping (UIBackgroundFetchResult) -> Void) {","        if Jivo.notifications.handleIncoming(userInfo: userInfo, completionHandler: completionHandler) {","            return","        }","        ","        completionHandler(.noData)","    }","    ","    func userNotificationCenter(_ center: UNUserNotificationCenter, willPresent notification: UNNotification, withCompletionHandler completionHandler: @escaping (UNNotificationPresentationOptions) -> Void) {","        Jivo.notifications.configurePresentation(notification: notification, proxyTo: completionHandler) { target, event in","            switch target {","            case .app:","                return []","            case .sdk:","                return [.alert]","            }","        }","    }","    ","    func userNotificationCenter(_ center: UNUserNotificationCenter, didReceive response: UNNotificationResponse, withCompletionHandler completionHandler: @escaping () -> Void) {","        Jivo.notifications.handleUser(response: response)","    }","}"],"highlights":[{"line":3},{"line":7},{"line":8},{"line":11},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44}],"type":"file","fileType":"swift","identifier":"native.app_delegate_02.swift.sample"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/flutter_usage_basics#How-to-handle-Push-Notifications":{"type":"section","abstract":[{"type":"text","text":"Some scenarios of how to use SDK"}],"role":"pseudoSymbol","title":"How to handle Push Notifications","kind":"section","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics#How-to-handle-Push-Notifications","url":"\/tutorials\/jivosdk\/flutter_usage_basics#How-to-handle-Push-Notifications"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/react_usage_basics#How-to-display-SDK":{"type":"section","abstract":[{"type":"text","text":"Some scenarios of how to use SDK"}],"role":"pseudoSymbol","title":"How to display SDK","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics#How-to-display-SDK","kind":"section","url":"\/tutorials\/jivosdk\/react_usage_basics#How-to-display-SDK"},"doc://org.cocoapods.JivoSDK/tutorials/table":{"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table","abstract":[],"type":"topic","role":"overview","url":"\/tutorials\/table","kind":"overview","title":"JivoSDK Samples"},"native.user_manager_01.swift.sample":{"highlights":[{"line":2},{"line":16},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26}],"syntax":"swift","fileName":"UserManager.swift","identifier":"native.user_manager_01.swift.sample","content":["import Foundation","import JivoSDK","","struct User {","    let email: String","    let supportJwt: String","    let fullName: String?","    let phoneNumber: String?","}","","final class UserManager {","    private(set) var user: User?","    ","    func update(user: User) {","        self.user = user","        configureJivoSession()","    }","    ","    private func configureJivoSession() {","        if let user {","            Jivo.session.startUp(channelID: \"YOUR_CHANNEL_ID\", userToken: user.supportJwt)","        }","        else {","            Jivo.session.shutDown()","        }","    }","}"],"fileType":"swift","type":"file"},"native.app_delegate_01.swift.sample":{"highlights":[{"line":3},{"line":8},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26}],"fileName":"AppDelegate.swift","content":["import Foundation","import UIKit","import JivoSDK","","final class AppDelegate: UIResponder",", UIApplicationDelegate {","    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {","        Jivo.notifications.handleLaunch(options: launchOptions)","        return true","    }","    ","    func application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {","        Jivo.notifications.setPushToken(data: deviceToken)","    }","    ","    func application(_ application: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: Error) {","        Jivo.notifications.setPushToken(data: nil)","    }","    ","    func application(_ application: UIApplication, didReceiveRemoteNotification userInfo: [AnyHashable : Any], fetchCompletionHandler completionHandler: @escaping (UIBackgroundFetchResult) -> Void) {","        if Jivo.notifications.handleIncoming(userInfo: userInfo, completionHandler: completionHandler) {","            return","        }","        ","        completionHandler(.noData)","    }","}"],"identifier":"native.app_delegate_01.swift.sample","type":"file","syntax":"swift","fileType":"swift"},"native.user_manager_00.swift.sample":{"highlights":[],"fileName":"UserManager.swift","content":["import Foundation","","struct User {","    let email: String","    let supportJwt: String","    let fullName: String?","    let phoneNumber: String?","}","","final class UserManager {","    private(set) var user: User?","    ","    func update(user: User) {","        self.user = user","    }","}"],"identifier":"native.user_manager_00.swift.sample","type":"file","syntax":"swift","fileType":"swift"},"native.app_delegate_11.swift.sample":{"highlights":[{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24}],"syntax":"swift","fileName":"AppDelegate.swift","identifier":"native.app_delegate_11.swift.sample","content":["import Foundation","import UIKit","import JivoSDK","","final class AppDelegate: JVAppDelegate {","    override func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {","        if super.application(application, didFinishLaunchingWithOptions: launchOptions) {","            \/\/ notification for JivoSDK","        }","        else {","            \/\/ notification for your app","        }","        ","        return true","    }","    ","    override func jivo(bannerPresentation sdk: JivoSDK, target: JivoSDKNotificationTarget, event: JivoSDKNotificationEvent, notification: UNNotification) -> UNNotificationPresentationOptions {","        switch target {","        case .app:","            return []","        case .sdk:","            return [.alert]","        }","    }","}"],"fileType":"swift","type":"file"},"native.sdk_display_customization_00.swift.sample":{"highlights":[],"fileName":"SdkDisplayCustomization.swift","content":["import JivoSDK","","Jivo.display.define(text: \"Friendly Support\", forElement: .headerTitle)","Jivo.display.define(color: .purple, forElement: .headerTitle)","Jivo.display.define(image: UIImage(), forElement: .headerIcon)"],"identifier":"native.sdk_display_customization_00.swift.sample","type":"file","syntax":"swift","fileType":"swift"},"native.profile_view_controller_01.swift.sample":{"highlights":[{"line":5},{"line":15},{"line":16},{"line":26},{"line":27},{"line":28}],"syntax":"swift","fileName":"ProfileViewController.swift","identifier":"native.profile_view_controller_01.swift.sample","content":["import Foundation","import UIKit","","fileprivate enum ProfileMenuItem: Int {","    case support","    case faq","    case website","}","","final class ProfileViewController: UITableViewController, UITableViewDelegate {","    \/\/ ...","    ","    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {","        switch ProfileMenuItem(rawValue: indexPath.row) {","        case .support:","            handleProfileMenuItemSupportTap()","        case .faq:","            handleProfileMenuItemFaqTap()","        case .website:","            handleProfileMenuItemWebsiteTap()","        case nil:","            break","        }","    }","    ","    private func handleProfileMenuItemSupportTap() {","    }","    ","    private func handleProfileMenuItemFaqTap() {","        \/\/ navigate to faq screen","    }","    ","    private func handleProfileMenuItemWebsiteTap() {","        \/\/ open website in safari","    }","}"],"fileType":"swift","type":"file"},"native.profile_view_controller_00.swift.sample":{"highlights":[],"syntax":"swift","fileName":"ProfileViewController.swift","identifier":"native.profile_view_controller_00.swift.sample","content":["import Foundation","import UIKit","","fileprivate enum ProfileMenuItem: Int {","    case faq","    case website","}","","final class ProfileViewController: UITableViewController, UITableViewDelegate {","    \/\/ ...","    ","    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {","        switch ProfileMenuItem(rawValue: indexPath.row) {","        case .faq:","            handleProfileMenuItemFaqTap()","        case .website:","            handleProfileMenuItemWebsiteTap()","        case nil:","            break","        }","    }","    ","    private func handleProfileMenuItemFaqTap() {","        \/\/ navigate to faq screen","    }","    ","    private func handleProfileMenuItemWebsiteTap() {","        \/\/ open website in safari","    }","}"],"fileType":"swift","type":"file"},"doc://org.cocoapods.JivoSDK/tutorials/table/React-Native-app":{"type":"topic","abstract":[],"role":"article","title":"React Native app","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/React-Native-app","kind":"article","url":"\/tutorials\/table\/react-native-app"},"doc://org.cocoapods.JivoSDK/documentation/JivoSDK/JVDisplayElement":{"kind":"symbol","type":"topic","abstract":[{"text":"UI elements available for customization","type":"text"}],"url":"\/documentation\/jivosdk\/jvdisplayelement","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"JVDisplayElement"}],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/documentation\/JivoSDK\/JVDisplayElement","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"JVDisplayElement","kind":"identifier"}],"title":"JVDisplayElement"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/react_usage_basics#How-to-handle-Push-Notifications":{"type":"section","abstract":[{"text":"Some scenarios of how to use SDK","type":"text"}],"role":"pseudoSymbol","title":"How to handle Push Notifications","kind":"section","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics#How-to-handle-Push-Notifications","url":"\/tutorials\/jivosdk\/react_usage_basics#How-to-handle-Push-Notifications"},"native.user_manager_02.swift.sample":{"highlights":[{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":28}],"syntax":"swift","fileName":"UserManager.swift","identifier":"native.user_manager_02.swift.sample","content":["import Foundation","import JivoSDK","","struct User {","    let email: String","    let supportJwt: String","    let fullName: String?","    let phoneNumber: String?","}","","final class UserManager {","    private(set) var user: User?","    ","    func update(user: User) {","        self.user = user","        configureJivoSession()","    }","    ","    private func configureJivoSession() {","        if let user {","            let info = JVSessionContactInfo(","                name: user.fullName,","                email: user.email,","                phone: user.phoneNumber","            )","            ","            Jivo.session.startUp(channelID: \"YOUR_CHANNEL_ID\", userToken: user.supportJwt)","            Jivo.session.setContactInfo(info)","        }","        else {","            Jivo.session.shutDown()","        }","    }","}"],"fileType":"swift","type":"file"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/native_usage_basics#How-to-display-SDK":{"type":"section","abstract":[{"text":"Some scenarios of how to use SDK","type":"text"}],"role":"pseudoSymbol","title":"How to display SDK","kind":"section","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-display-SDK","url":"\/tutorials\/jivosdk\/native_usage_basics#How-to-display-SDK"},"doc://org.cocoapods.JivoSDK/tutorials/table/Native-app":{"type":"topic","abstract":[],"role":"article","title":"Native app","kind":"article","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/Native-app","url":"\/tutorials\/table\/native-app"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/flutter_usage_basics#How-to-handle-user-session":{"type":"section","abstract":[{"text":"Some scenarios of how to use SDK","type":"text"}],"role":"pseudoSymbol","title":"How to handle user session","kind":"section","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics#How-to-handle-user-session","url":"\/tutorials\/jivosdk\/flutter_usage_basics#How-to-handle-user-session"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/native_usage_basics":{"abstract":[{"text":"Some scenarios of how to use SDK","type":"text"}],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics","type":"topic","role":"project","url":"\/tutorials\/jivosdk\/native_usage_basics","kind":"project","title":"Basic usage"},"native.app_delegate_10.swift.sample":{"highlights":[{"line":5},{"line":6},{"line":7},{"line":8},{"line":10},{"line":11},{"line":12},{"line":14}],"syntax":"swift","fileName":"AppDelegate.swift","identifier":"native.app_delegate_10.swift.sample","content":["import Foundation","import UIKit","import JivoSDK","","final class AppDelegate: JVAppDelegate {","    override func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {","        if super.application(application, didFinishLaunchingWithOptions: launchOptions) {","            \/\/ notification for JivoSDK","        }","        else {","            \/\/ notification for your app","        }","        ","        return true","    }","}"],"fileType":"swift","type":"file"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/native_usage_basics#How-to-handle-Push-Notifications":{"type":"section","abstract":[{"text":"Some scenarios of how to use SDK","type":"text"}],"role":"pseudoSymbol","title":"How to handle Push Notifications","kind":"section","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-handle-Push-Notifications","url":"\/tutorials\/jivosdk\/native_usage_basics#How-to-handle-Push-Notifications"},"native.profile_view_controller_03.swift.sample":{"highlights":[{"line":17},{"line":19},{"line":21},{"line":31},{"line":32},{"line":33}],"syntax":"swift","fileName":"ProfileViewController.swift","identifier":"native.profile_view_controller_03.swift.sample","content":["import Foundation","import UIKit","import JivoSDK","","fileprivate enum ProfileMenuItem: Int {","    case support","    case faq","    case website","}","","final class ProfileViewController: UITableViewController, UITableViewDelegate {","    \/\/ ...","    ","    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {","        switch ProfileMenuItem(rawValue: indexPath.row) {","        case .support:","            handleHelpMenuItemSupportTap()","        case .faq:","            handleHelpMenuItemFaqTap()","        case .website:","            handleHelpMenuItemWebsiteTap()","        case nil:","            break","        }","    }","    ","    private func handleProfileMenuItemSupportTap() {","        if let navigationController {","            Jivo.display.push(into: navigationController)","        }","        else {","            Jivo.display.present(over: self)","        }","    }","    ","    private func handleProfileMenuItemFaqTap() {","        \/\/ navigate to faq screen","    }","    ","    private func handleProfileMenuItemWebsiteTap() {","        \/\/ open website in safari","    }","}"],"fileType":"swift","type":"file"},"native.app_delegate_00.swift.sample":{"highlights":[],"syntax":"swift","fileName":"AppDelegate.swift","identifier":"native.app_delegate_00.swift.sample","content":["import Foundation","import UIKit","","final class AppDelegate: UIResponder",", UIApplicationDelegate {","    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {","        return true","    }","}"],"fileType":"swift","type":"file"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"value":"JVDisplayElement","op":"replace","path":"\/references\/doc:~1~1org.cocoapods.JivoSDK~1documentation~1JivoSDK~1JVDisplayElement\/title"},{"value":[{"text":"JVDisplayElement","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.JivoSDK~1documentation~1JivoSDK~1JVDisplayElement\/fragments"}],"traits":[{"interfaceLanguage":"occ"}]}]}